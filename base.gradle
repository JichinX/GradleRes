/*使用时请注意：
    请按照自己开发环境按实际情况配置，配置方式为 在 gradle.properties 添加对应的值，
    比如：STORE_FILE=/Users/xujichang/work/keystores/
    涉及到的变量解释如下：
    签名文件：
    STORE_FILE 签名文件存放文件夹路径
    KEY_FILE 签名文件名称
    KEY_PASS 签名文件密码
    ALIAS_NAME alias名
    ALIAS_PASS alias密码
    版本号：
    APP_major 主版本号
    App_minor 此版本号
    App_maintenance 修订版本号

*/
android {
    def AppBuild = getIncreasedVersionCode()
    def AppName = getAppVersionName(AppBuild)
    def AppCode = getAppVersionCode(AppBuild)
//设置APP版本号和版本名称
    defaultConfig {
        versionCode AppCode
        versionName AppName
    }
//设置签名信息，其中STORE_FILE是在全局gradle.properties中设置，
    signingConfigs {
        config { //配置keystore文件的各种信息
            storeFile file(STORE_FILE + KEY_FILE)
            storePassword KEY_PASS
            keyAlias ALIAS_NAME
            keyPassword ALIAS_PASS
        }
    }
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                output -> outputFileName = new File("${rootProject.name}_v${versionName}_${productFlavors[0].name}_${buildType.name}.apk".toLowerCase())
            }
    }
}
//取APP版本名称，其中APP_major,APP_minor,App_maintenance,是需要在本地Gradle.properties中设置
def getAppVersionName(int App_build) {
    return "$APP_major.$App_minor.$App_maintenance.$App_build"
}
//同上
def getAppVersionCode(int App_build) {
    def code = Integer.parseInt("$APP_major$App_minor$App_maintenance$App_build")
    return code
}
//获取build版本，取系统时间换算后的小时后 除4，除四是因为数据会好看些...
def getIncreasedVersionCode() {
    def mills = System.currentTimeMillis();
    print(mills)
    return (int) (mills / (1000_000))
}
